{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DCL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#supports"
		},
		{
			"include": "#elements"
		},
		{
			"include": "#special"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.dcl",
					"match": "(?i)\\b(if|then|else|endif|call|set|on|return|exit|wait)\\b"
				},
				{
					"name": "keyword.operator.quantifier.regexp.dcl",
					"match": "(?i)\\b(open|close|write|read|copy|create|delete|type|def|define|inquire)\\b"
				},
				{
					"comment": "Comparation operators",
					"name": "keyword.operator.new.dcl",
					"match": "(?i)\\.eq\\.|\\.ne\\.|\\.gt\\.|\\.ge\\.|\\.lt\\.|\\.le\\.|\\.not\\.|\\.and\\.|\\.or\\.|\\.eqs\\.|\\.nes\\.|\\.gts\\.|\\.ges\\.|\\.lts\\.|\\.les\\."
				},
				{
					"comment": "System streams",
					"name": "keyword.other.unit.dcl",
					"match": "(?i)sys\\$error|sys\\$output|sys\\$input|\\(|\\)"
				},
				{
					"comment": "Qualifiers",
					"name": "string.regexp.dcl",
					"match": "(?i)/[a-z_]{3,}+"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.dcl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"comment": "Variable substitution in string",
					"name": "entity.name.variable.dcl",
					"match": "''.+?'"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.exclamation.dcl",
					"match": "!.*?$"
				}
			]
		},
		"supports": {
			"patterns": [
				{
					"comment": "Lexical functions",
					"name": "support.function.dcl",
					"match": "(?i)f\\$[a-z]++"
				}
			]
		},
		"elements": {
			"patterns": [
				{
					"comment": "Variables definition",
					"match": "(?i)^\\$\\s+([a-z_0-9]+)\\s*(?:=|==)",
					"captures": {
						"1": { "name": "variable.name.dcl" }
					}
				},
				{
					"comment": "Variables definition with strings",
					"begin": "(?i)^\\$\\s+([a-z_0-9']+)\\s*(?::=|:==)",
					"end": "[^-]\n+$",
					"contentName": "emphasis.dcl",
					"patterns": [
						{ "include": "#special"}
					],
					"beginCaptures": {
						"1": { "name": "variable.name.dcl" }
					},
					"endCaptures": {
						"0": { "name": "emphasis.dcl"}
					}
				},
				{
					"comment": "Jumping to label",
					"match": "(?i)\\b(goto|gosub)\\b\\s+('?[a-z_0-9]+'?)",
					"captures": {
						"1": { "name": "keyword.control.dcl" },
						"2": { "name": "punctuation.definition.tag.dcl" }
					}
				},
				{
					"comment": "Label declaration",
					"match": "(?i)^\\$\\s+([a-z_0-9]+):",
					"captures": {
						"1": { "name": "punctuation.definition.tag.dcl" }
					}
				}
			]
		},
		"special": {
			"patterns": [
				{
					"comment": "Line break",
					"name": "invalid.dcl",
					"match": "-$"
				},
				{
					"comment": "Dereferencing of variable",
					"name": "entity.name.variable.dcl",
					"match": "(?i)'[a-z0-9_]++'"
				}
			]
		}
	},
	"scopeName": "source.dcl"
}